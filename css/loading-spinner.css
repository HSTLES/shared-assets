/**
 * HSTLES Loading Spinner Styles
 * CSS animations and styles for loading states and spinners
 * Version: v0.1.8
 * Build-Date: 2025-08-16
 * Tag: v0.1.8
 * Source: https://github.com/HSTLES/shared-assets
 * CDN-Note: If @latest is stale, purge:
 *   - https://purge.jsdelivr.net/gh/HSTLES/shared-assets@latest/css/loading-spinner.css
 */

/* Loading spinner styles */
.loading-spinner {
  /* base box */
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: #ffffff;
  animation: spin 1s ease-in-out infinite;
  margin-right: 8px;
  vertical-align: middle;
}

/* Dark mode spinner adjustments */
.dark .btn-light .loading-spinner {
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-top-color: #000000;
}

/* Primary button spinner */
.btn-primary .loading-spinner {
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: #ffffff;
}

/* Secondary button spinner */
.btn-secondary .loading-spinner {
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-top-color: #000000;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Single-loader mode: keep button text visible during loading */
/* (per-element spinners suppressed below) */

/* Single-loader mode: do not show per-element spinners during HTMX requests */
/* .htmx-request .loading-spinner { display: inline-flex; } */

/* Support the conventional HTMX indicator pattern */
.htmx-indicator {
  display: none;
}
.htmx-request .htmx-indicator {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* Hide spinner by default */
.loading-spinner {
  display: none;
}

/* Form loading state */
.htmx-request {
  pointer-events: none;
  opacity: 0.8;
  position: relative;
}

/* Disable hover effects during loading */
.htmx-request:hover {
  transform: none !important;
}

/* Card loading overlay when any descendant is issuing an HTMX request */
.card:has(.htmx-request)::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.1);
  border-radius: inherit;
  z-index: 1;
}
.dark .card:has(.htmx-request)::before {
  background: rgba(0, 0, 0, 0.1);
}

/* Center spinner inside buttons that contain it */
.btn:has(.loading-spinner) {
  position: relative;
}
.btn:has(.loading-spinner) .loading-spinner {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
}

/* Single-loader mode: only global overlay shows during redirects */
/* .hstles-redirecting .loading-spinner,
.hstles-redirecting .htmx-indicator { display: inline-flex !important; } */

/* =============================================================
   Global (Universal) Loading Overlay
   - Toggle with .hstles-loading on <html>
   - JS will create .hstles-global-loader element at runtime
   ============================================================= */
.hstles-loader {
  position: fixed;
  inset: 0;
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 2147483647; /* on top */
  background: rgba(255, 255, 255, 0.4);
  backdrop-filter: blur(1px);
}

.dark .hstles-loader {
  background: rgba(0, 0, 0, 0.4);
}

/* Show overlay when global loading is active */
.hstles-loading .hstles-loader {
  display: flex;
}

/* Larger spinner for overlay */
.hstles-loader .loading-spinner {
  display: inline-block;
  width: 28px;
  height: 28px;
  border-width: 3px;
  margin: 0;
}

/* Screen-reader only text */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* =============================================================
   Button Loader (opt-in via .btn-loader or [data-loader="btn"])
   ============================================================= */

.btn-loader { position: relative; }

.btn-loader .loading-spinner {
  /* hidden until loading */
  display: none;
}

/* When loading: show spinner, hide label, block clicks */
.btn-loader.is-loading {
  pointer-events: none;
}
.btn-loader.is-loading .loading-spinner {
  display: inline-block !important; /* override global default */
}
.btn-loader.is-loading .btn-label {
  visibility: hidden; /* keeps button width from shifting */
}